#!/usr/bin/env bash

# Recent Directory History
# Copyright (C) 2014 Jacobo de Vera

# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
# OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
# DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
# TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE
# OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.


declare -a DIRECTORY_HISTORY_DIRS
declare -a DIRECTORY_HISTORY_TIMES


DIRECTORY_HISTORY_ENTRIES="${DIRECTORY_HISTORY_ENTRIES:-30}"


function __dir_history_add()
{
    local new_dir="$(pwd)"

    if [[ $1 == '--init' ]]; then
        if [[ ${#DIRECTORY_HISTORY_DIRS[@]} == 0 ]]; then
            DIRECTORY_HISTORY_DIRS=( "$(readlink -f $new_dir)" )
            DIRECTORY_HISTORY_TIMES=( "$(date -u +'%Y-%m-%d %H:%M:%S %Z')" )
        fi
        return 0
    fi

    local old_dir="$1"

    # No change, no entry
    [[ $old_dir == $new_dir ]] && return 0

    # Always the same size, or the highway
    if [[ ${#DIRECTORY_HISTORY_DIRS[@]} != ${#DIRECTORY_HISTORY_TIMES[@]} ]]
    then
        DIRECTORY_HISTORY_DIRS=()
        DIRECTORY_HISTORY_TIMES=()
    fi
    
    DIRECTORY_HISTORY_DIRS+=( "$(readlink -f $new_dir)" )
    DIRECTORY_HISTORY_TIMES+=( "$(date -u +'%Y-%m-%d %H:%M:%S %Z')" )

    # Keep the sizes down
    while [[ ${#DIRECTORY_HISTORY_DIRS[@]} -gt $DIRECTORY_HISTORY_ENTRIES ]]
    do
        unset DIRECTORY_HISTORY_DIRS[0]
        unset DIRECTORY_HISTORY_TIMES[0]
        DIRECTORY_HISTORY_DIRS=( "${DIRECTORY_HISTORY_DIRS[@]}" )
        DIRECTORY_HISTORY_TIMES=( "${DIRECTORY_HISTORY_TIMES[@]}" )
    done
}


# ----------------------------------------------------------------------------
# Wrap cd so we get entries in the dir history
# ----------------------------------------------------------------------------
function cd()
{
    local old_dir="$PWD"
    builtin cd "$@" && __dir_history_add "$old_dir"
}


# ----------------------------------------------------------------------------
# Without arguments, show the current directory history, with an index number,
# and time. With a numeric argument, it is taken as the index from the
# previous list. Change into the directory referenced by that directory.
# ----------------------------------------------------------------------------
function cdh()
{
    local len="${#DIRECTORY_HISTORY_DIRS[@]}"

    if [[ -z $1 ]]
    then
        local lenlen="${#len}"
        local n=$len
        local time
        local dir
        for (( i=0; i<${len}; i++ ))
        do
            time="${DIRECTORY_HISTORY_TIMES[$i]}"
            dir="${DIRECTORY_HISTORY_DIRS[$i]}"
            printf " (\e[1m%${lenlen}d\e[0m) %s | \e[1;36m%s\e[0m\n" $n "$time" "$dir"
            (( n-- ))
        done
        return
    fi

    local n=$1
    local idx=$len

    (( idx = idx - n ))
    cd "${DIRECTORY_HISTORY_DIRS[$idx]}"
    pwd
}



# ----------------------------------------------------------------------------
# Debug info for directory history
# ----------------------------------------------------------------------------
cdh-dbg()
{
    local len="${#DIRECTORY_HISTORY_DIRS[@]}"
    echo "max entries:     $DIRECTORY_HISTORY_ENTRIES"
    echo "current entries: $len"
    local lenlen="${#len}"
    local menu=$len
    local idx=0
    for (( i=0; i<${len}; i++ ))
    do
        echo -n "idx: $idx menu: $menu date: ${DIRECTORY_HISTORY_TIMES[$i]} "
        echo "dir: ${DIRECTORY_HISTORY_DIRS[$i]}"
        (( menu-- ))
        (( idx++ ))
    done
    
}
